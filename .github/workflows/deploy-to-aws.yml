name: Build and Deploy to ECS

on:
    push:
        branches:
            - master

jobs:
    build-and-deploy:
        # env:
        #     AWS_REGION: us-east-1
        #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        runs-on: ubuntu-latest

        steps:
            - name: Print AWS Environment Variables
              run: |
                  echo "AWS_ACCESS_KEY_ID is $AWS_ACCESS_KEY_ID"
                  echo "AWS_SECRET_ACCESS_KEY is $AWS_SECRET_ACCESS_KEY"
                  echo "AWS_REGION is $AWS_REGION"

            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-region: us-east-1
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            # - name: Log in to Amazon ECR
            #   env:
            #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            #   run: |
            #       aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 248184751550.dkr.ecr.us-west-2.amazonaws.com

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: ori
                  IMAGE_TAG: latest
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            # - name: Update ECS Service
            #   env:
            #       AWS_REGION: ${{ secrets.AWS_REGION }}
            #       ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
            #       ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
            #       ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
            #       CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
            #   run: |
            #       IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
            #       ECS_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $ECS_SERVICE | jq -r '.taskDefinition | {family: .family, containerDefinitions: .containerDefinitions}')
            #       NEW_TASK_DEFINITION=$(echo $ECS_TASK_DEFINITION | jq --arg ECR_REPOSITORY "$ECR_REPOSITORY" --arg IMAGE_TAG "$IMAGE_TAG" '.containerDefinitions[0].image = "\($ECR_REPOSITORY):\($IMAGE_TAG)" | .')
            #       aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEFINITION"
            #       aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
